public class Solution {

	public static LinkedListNode<Integer> evenAfterOdd(LinkedListNode<Integer> head) {
    if (head == null) {
        return null;
    }

    LinkedListNode<Integer> odd = null;
    LinkedListNode<Integer> oddHead = null;
    LinkedListNode<Integer> even = null;
    LinkedListNode<Integer> evenHead = null;

    while (head != null) {
        if (head.data % 2 == 0) {
            if (even == null) {
                even = head;
                evenHead = even;
            } else {
                even.next = head;
                even = even.next;
            }
        } else {
            if (odd == null) {
                odd = head;
                oddHead = odd;
            } else {
                odd.next = head;
                odd = odd.next;
            }
        }
        head = head.next;
    }

    if (odd == null) {
        return evenHead;
    }

    odd.next = evenHead;
    if (even != null) {
        even.next = null;
    }

    return oddHead;
}

}
